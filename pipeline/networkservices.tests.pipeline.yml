parameters:
  # Global flags
  - name: enableProduction
    displayName: "Enable Production"
    type: boolean
    default: false
  - name: drInvocation
    displayName: "Invoke Pipeline DR Operation"
    type: boolean
    default: false

  # Bicep test toggles & settings
  - name: doNotRunBicepTestsResourceGroup
    displayName: "Bicep Tests: Skip Resource Group"
    type: boolean
    default: false
  - name: doNotRunBicepTestsNetworkServices
    displayName: "Bicep Tests: Skip Network Services"
    type: boolean
    default: false
  - name: doNotRunUnit
    displayName: "Bicep Tests: Skip Unit"
    type: boolean
    default: false
  - name: doNotRunIntegration
    displayName: "Bicep Tests: Skip Integration"
    type: boolean
    default: false
  - name: doNotRunRegression
    displayName: "Bicep Tests: Skip Regression"
    type: boolean
    default: false
  - name: doNotRunSmoke
    displayName: "Bicep Tests: Skip Smoke"
    type: boolean
    default: false

  # Operational flags
  - name: allowDeleteOnUnmanage
    displayName: "Temporarily Allow Delete on Unmanage"
    type: boolean
    default: false
  - name: cleanupResourceGroupStack
    displayName: "Cleanup Resource Group Stack"
    type: boolean
    default: false

  # Environment skips
  - name: skip_dev
    displayName: "Skip Environments: Development"
    type: boolean
    default: false
  - name: skip_qa
    displayName: "Skip Environments: QA"
    type: boolean
    default: true
  - name: skip_ppr
    displayName: "Skip Environments: Pre-Production"
    type: boolean
    default: true

  # Region skips
  - name: skip_primary
    displayName: "Skip Regions: Primary"
    type: boolean
    default: false
  - name: skip_secondary
    displayName: "Skip Regions: Secondary"
    type: boolean
    default: false

extends:
  template: networkservices.settings.yml
  parameters:
    enableProduction: ${{ parameters.enableProduction }}
    runReviewStage: false
    drInvocation: ${{ parameters.drInvocation }}
    skipEnvironments:
      dev: ${{ parameters.skip_dev }}
      qa: ${{ parameters.skip_qa }}
      ppr: ${{ parameters.skip_ppr }}
    skipRegions:
      primary: ${{ parameters.skip_primary }}
      secondary: ${{ parameters.skip_secondary }}
    globalDependsOn: validation
    pipelineType: auto
    actionGroups:
      - name: bicep_tests_resource_group_ci
        enabled: ${{ and( or(not(parameters.doNotRunUnit), not(parameters.doNotRunIntegration)), not(parameters.doNotRunBicepTestsResourceGroup) ) }}
        type: powershell
        scriptTask: azureCli
        kind: pester
        tokenReplaceEnabled: true
        tokenTargetPatterns:
          - platform/resourcegroup.bicepparam
          - tests/design/resource_group/**/*.design.json
        environments:
          - dev
        actions:
          - name: unit_tests
            enabled: ${{ not(parameters.doNotRunUnit) }}
            scriptPath: scripts/pester_run.ps1
            arguments: "-TestsPath tests/unit/resource_group -ResultsFile TestResults/bicep_tests_resource_group_unit_tests.xml"
          - name: integration_tests
            enabled: ${{ not(parameters.doNotRunIntegration) }}
            scriptPath: scripts/pester_run.ps1
            arguments: "-TestsPath tests/integration/resource_group -ResultsFile TestResults/bicep_tests_resource_group_integration_tests.xml"
      - name: bicep_tests_resource_group
        enabled: ${{ and( or(not(parameters.doNotRunRegression), not(parameters.doNotRunSmoke)), not(parameters.doNotRunBicepTestsResourceGroup) ) }}
        type: powershell
        scriptTask: azureCli
        kind: pester
        tokenReplaceEnabled: true
        tokenTargetPatterns:
          - tests/design/resource_group/**/*.design.json
        actions:
          - name: regression_tests
            enabled: ${{ not(parameters.doNotRunRegression) }}
            scriptPath: scripts/pester_run.ps1
            arguments: "-TestsPath tests/regression/resource_group -ResultsFile TestResults/bicep_tests_resource_group_regression_tests.xml"
          - name: smoke_tests
            enabled: ${{ not(parameters.doNotRunSmoke) }}
            scriptPath: scripts/pester_run.ps1
            arguments: "-TestsPath tests/smoke/resource_group -ResultsFile TestResults/bicep_tests_resource_group_smoke_tests.xml"
      - name: bicep_tests_network_services_ci
        enabled: ${{ and( or(not(parameters.doNotRunUnit), not(parameters.doNotRunIntegration)), not(parameters.doNotRunBicepTestsNetworkServices) ) }}
        type: powershell
        scriptTask: azureCli
        kind: pester
        tokenReplaceEnabled: true
        tokenTargetPatterns:
          - platform/*.bicepparam
          - tests/design/network_services/**/*.design.json
        environments:
          - dev
        actions:
          - name: unit_tests
            enabled: ${{ not(parameters.doNotRunUnit) }}
            scriptPath: scripts/pester_run.ps1
            arguments: "-TestsPath tests/unit/network_services -ResultsFile TestResults/bicep_tests_network_services_unit_tests.xml"
          - name: integration_tests
            enabled: ${{ not(parameters.doNotRunIntegration) }}
            scriptPath: scripts/pester_run.ps1
            arguments: "-TestsPath tests/integration/network_services -ResultsFile TestResults/bicep_tests_network_services_integration_tests.xml"
      - name: bicep_tests_network_services
        enabled: ${{ and( or(not(parameters.doNotRunRegression), not(parameters.doNotRunSmoke)), not(parameters.doNotRunBicepTestsNetworkServices) ) }}
        type: powershell
        scriptTask: azureCli
        kind: pester
        tokenReplaceEnabled: true
        tokenTargetPatterns:
          - tests/design/network_services/**/*.design.json
        actions:
          - name: regression_tests
            enabled: ${{ not(parameters.doNotRunRegression) }}
            scriptPath: scripts/pester_run.ps1
            arguments: "-TestsPath tests/regression/network_services -ResultsFile TestResults/bicep_tests_network_services_regression_tests.xml"
          - name: smoke_tests
            enabled: ${{ not(parameters.doNotRunSmoke) }}
            scriptPath: scripts/pester_run.ps1
            arguments: "-TestsPath tests/smoke/network_services -ResultsFile TestResults/bicep_tests_network_services_smoke_tests.xml"
